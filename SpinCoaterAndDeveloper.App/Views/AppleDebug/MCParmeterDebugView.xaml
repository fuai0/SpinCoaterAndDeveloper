<UserControl
    x:Class="SpinCoaterAndDeveloper.App.Views.MCParmeterDebugView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
    xmlns:viewmodels="clr-namespace:SpinCoaterAndDeveloper.App.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:MCParmeterDebugViewModel}"
    d:DesignHeight="700"
    d:DesignWidth="1280"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <vc:BoolToBrushConverter
            x:Key="BoolToBrushConverter"
            FalseValue="{StaticResource SecondaryAccentForegroundBrush}"
            TrueValue="{StaticResource SecondaryAccentBrush}" />
    </UserControl.Resources>
    <Grid Background="{StaticResource AppleHeavyBackGroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <UniformGrid
            Margin="0,5,5,0"
            Columns="10"
            FirstColumn="5">
            <TextBlock
                Margin="2,0,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                FontSize="15"
                Text="{DynamicResource SelectGroup}" />
            <ComboBox
                x:Name="GroupSelected"
                Margin="2,0,0,0"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Center"
                ItemsSource="{Binding ParmeterGroupCollection}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ParmeterGroupChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=GroupSelected}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBox
                Margin="2,0,0,0"
                Padding="0"
                VerticalAlignment="Bottom"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:TextFieldAssist.HasClearButton="True"
                Text="{Binding ParmeterFilter, UpdateSourceTrigger=PropertyChanged}">
                <materialDesign:HintAssist.Hint>
                    <StackPanel Margin="-2,0,0,0" Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Magnify" />
                        <TextBlock Text="{DynamicResource ParameterNameFiltering}" />
                    </StackPanel>
                </materialDesign:HintAssist.Hint>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding ParmeterFilterCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Button
                Margin="2,0,0,0"
                VerticalAlignment="Bottom"
                Command="{Binding ShowAllParmetersCommand}"
                Content="{DynamicResource ShowAllParameters}" />
            <Button
                Margin="2,0,0,0"
                VerticalAlignment="Bottom"
                Command="{Binding SaveAllDataCommand}"
                Content="{DynamicResource SaveData}" />
        </UniformGrid>
        <DataGrid
            Grid.Row="1"
            materialDesign:DataGridAssist.CellPadding="10 2 10 2"
            materialDesign:DataGridAssist.ColumnHeaderPadding="10 2 10 2"
            materialDesign:DataGridAssist.SelectedCellBorderBrush="Transparent"
            AutoGenerateColumns="False"
            Background="{StaticResource AppleHeavyBackGroundBrush}"
            CanUserAddRows="False"
            CanUserSortColumns="False"
            ColumnWidth="*"
            HeadersVisibility="All"
            ItemsSource="{Binding ParmeterMonitorCollection}"
            RowHeaderWidth="1"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            SelectionMode="Single">
            <DataGrid.Resources>
                <Style
                    x:Key="DataGridColumnElementStyleDefine"
                    BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                    TargetType="{x:Type TextBlock}">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </DataGrid.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CellEditEnding">
                    <i:InvokeCommandAction Command="{Binding DataCheckCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Number, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Number}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding ShowOnUIName, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Name}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding DataType, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource DataType}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding Data, UpdateSourceTrigger=PropertyChanged}"
                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Value}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ErrorMark}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ErrorMark}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentForegroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding Unit, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Unit}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding Group, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Group}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn
                    Binding="{Binding Backup, Mode=OneWay}"
                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                    IsReadOnly="True">
                    <DataGridTextColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Content" Value="{DynamicResource Remark}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
