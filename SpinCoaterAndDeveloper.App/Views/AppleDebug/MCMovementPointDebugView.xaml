<UserControl
    x:Class="SpinCoaterAndDeveloper.App.Views.MCMovementPointDebugView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:jogDirType="clr-namespace:MotionCardServiceInterface;assembly=MotionCardServiceInterface"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:movementnType="clr-namespace:SpinCoaterAndDeveloper.Shared.Models.MotionControlModels;assembly=SpinCoaterAndDeveloper.Shared"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:prismEx="clr-namespace:PrismAutomationPlatformExt;assembly=PrismAutomationPlatformExt"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
    xmlns:viewmodels="clr-namespace:SpinCoaterAndDeveloper.App.ViewModels"
    xmlns:zc="clr-namespace:ZeroControls;assembly=ZeroControls"
    d:DataContext="{d:DesignInstance Type=viewmodels:MCMovementPointDebugViewModel}"
    d:DesignHeight="700"
    d:DesignWidth="1280"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <prismEx:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
        <vc:BoolToVisibilityConverter
            x:Key="BoolToVisibilityConverter"
            FalseValue="Collapsed"
            TrueValue="Visible" />
        <ObjectDataProvider
            x:Key="MovementType"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="movementnType:MovementType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="MovementJogArrivedType"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="movementnType:JogArrivedType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="JogDirType"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="jogDirType:Direction" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <vc:ValueConverterGroup x:Key="MovementTypeToVisible">
            <vc:EnumToBoolConverter />
            <vc:BoolToVisibilityConverter FalseValue="Hidden" TrueValue="Visible" />
        </vc:ValueConverterGroup>
        <Style x:Key="GridShowAllAxesStyle" TargetType="Grid">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ShowAllAxesCheckBox, Path=IsChecked}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ShowAllAxesCheckBox, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding InvolveAxis}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=ShowAllAxesCheckBox, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding InvolveAxis}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <vc:EnumToObjectConverter x:Key="EnumToPositionConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm</sys:String>
                    <sys:String x:Key="RotateAxis">°(度)</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
        <vc:EnumToObjectConverter x:Key="EnumToAccConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm/s²</sys:String>
                    <sys:String x:Key="RotateAxis">°/s²</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
        <vc:EnumToObjectConverter x:Key="EnumToVelConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm/s</sys:String>
                    <sys:String x:Key="RotateAxis">°/s</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid Margin="0,0,2,0" Background="{StaticResource AppleHeavyBackGroundBrush}">
            <ListBox
                DisplayMemberPath="ShowOnUIName"
                IsEnabled="{Binding ButtonEnable}"
                ItemsSource="{Binding MovementPointMonitorCollection}"
                SelectedItem="{Binding CurrentSelectPointName}" />
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Margin="2,0,2,2" Background="{StaticResource AppleHeavyBackGroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="4*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock
                    Margin="0,0,2,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="{DynamicResource SelectGroup}" />
                <ComboBox
                    x:Name="MCSelect"
                    Grid.Column="1"
                    Margin="2,0,0,0"
                    HorizontalContentAlignment="Center"
                    ItemsSource="{Binding MovementPointGroupCollection}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding MovementPointGourpChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=MCSelect}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button
                    Grid.Column="2"
                    Margin="2,0,2,0"
                    Padding="0"
                    Command="{Binding ShowAllMovementPointCommand}"
                    Content="{DynamicResource ShowAllMCPoints}" />
                <Button
                    Grid.Column="3"
                    Margin="2,0,4,0"
                    Padding="0"
                    Command="{Binding SaveDataCommand}"
                    Content="{DynamicResource Save}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="{DynamicResource GlobalVelocity}" />

                <Grid Grid.Row="1" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <zc:NumericUpDown
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        BorderThickness="0,0,0,1"
                        CornerRadius="0"
                        Increment="1"
                        Maximum="100"
                        Minimum="1"
                        Style="{StaticResource ZeroNumericUpDown}"
                        Value="{Binding GlobalVel}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="2,0,0,0"
                        Padding="0,4,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Text="%" />
                </Grid>

                <Button
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="2,0,2,0"
                    Padding="0"
                    Command="{Binding SaveGlobalVelCommand}"
                    Content="{DynamicResource SaveGlobalVelocity}" />
                <Button
                    Grid.Row="1"
                    Grid.Column="3"
                    Margin="2,0,4,0"
                    Padding="0"
                    Command="{Binding TeachPointCommand}"
                    Content="{DynamicResource TeachTheCurrentPointPosition}" />
                <TextBox
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="10,0,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    materialDesign:HintAssist.IsFloating="True"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    Text="{Binding MovementPointNameFilter, UpdateSourceTrigger=PropertyChanged}">
                    <materialDesign:HintAssist.Hint>
                        <StackPanel Margin="-2,0,0,0" Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Magnify" />
                            <TextBlock Text="{DynamicResource QuickFilteringOfPointNames}" />
                        </StackPanel>
                    </materialDesign:HintAssist.Hint>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding MovementPointNameFilterCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Margin="2,0,2,0"
                    Padding="0"
                    Command="{Binding MoveToSelectedPointCommand}"
                    Content="{DynamicResource MoveToPointPosition}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="3"
                    Margin="2,0,4,0"
                    Padding="0"
                    Command="{Binding StopMoveToSelectedCommand}"
                    Content="{DynamicResource StopMoveToPointPosition}" />

            </Grid>
            <!--  日志  -->
            <Border
                Grid.Row="0"
                Grid.Column="1"
                Margin="2,0,0,2"
                Background="{StaticResource AppleHeavyBackGroundBrush}">
                <Border
                    Margin="4"
                    BorderBrush="{StaticResource ApplelHeavyTextForegroundBrush}"
                    BorderThickness="1"
                    CornerRadius="5">
                    <ListBox DockPanel.Dock="Right" ItemsSource="{Binding MessageList}">
                        <ListBox.ContextMenu>
                            <ContextMenu DataContext="{Binding Data, Source={StaticResource BindingProxy}}">
                                <MenuItem
                                    Command="{Binding MsgClearCommand}"
                                    Header="{DynamicResource ClearLog}"
                                    Icon="{materialDesign:PackIcon Kind=Close}" />
                                <MenuItem
                                    Command="{Binding OpenLogDirectoryCommand}"
                                    Header="{DynamicResource OpenLog}"
                                    Icon="{materialDesign:PackIcon Kind=FolderSearchOutline}" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <i:Interaction.Behaviors>
                            <prismEx:ListBoxScrollToBottomExtensions />
                        </i:Interaction.Behaviors>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock Text="{Binding Time, StringFormat={}{0:HH:mm:ss:}}" />
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Text="{Binding Text}"
                                        TextWrapping="Wrap" />
                                </DockPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Degree}" Value="INFO">
                                        <Setter Property="ListBoxItem.Foreground" Value="Black" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Degree}" Value="DEBUG">
                                        <Setter Property="ListBoxItem.Foreground" Value="Black" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Degree}" Value="WARN">
                                        <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageOrangeBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Degree}" Value="ERROR">
                                        <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageRedBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Degree}" Value="FATAL">
                                        <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageRedBrush}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Border>

            <Grid
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="2,2,0,2"
                Background="{StaticResource AppleHeavyBackGroundBrush}">
                <ItemsControl ItemsSource="{Binding CurrentSelectPointName.MovementPointPositionsMonitorCollection}">
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ScrollViewer
                                CanContentScroll="False"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Hidden">
                                <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid
                                Width="328"
                                Margin="5,0,0,0"
                                Visibility="{Binding InvolveAxis, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Grid.Resources>
                                    <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="TextBlock">
                                        <Setter Property="Margin" Value="0,0,2,0" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                                        <Setter Property="Margin" Value="2,0,2,0" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Block.TextAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="0" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.Row="0"
                                    Grid.RowSpan="6"
                                    Grid.Column="4"
                                    Margin="5,10,0,3"
                                    BorderBrush="#939393"
                                    BorderThickness="0,0,1,0" />
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Left"
                                    FontSize="17"
                                    FontWeight="Bold"
                                    Text="{Binding AxisInfo.ShowOnUIName, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Text="{DynamicResource MoveType}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Text="{Binding MovementPointType, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{DynamicResource AbsoluteDisplacement}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Abs, Mode=OneWay}" />
                                <TextBox
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Text="{Binding AbsValue}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Abs, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Right"
                                    Text="{Binding AxisInfo.Type, Converter={StaticResource EnumToPositionConverter}, Mode=OneWay}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Abs, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{DynamicResource RelativeDisplacement}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Rel, Mode=OneWay}" />
                                <TextBox
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Text="{Binding RelValue}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Rel, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Right"
                                    Text="{Binding AxisInfo.Type, Converter={StaticResource EnumToPositionConverter}, Mode=OneWay}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Rel, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{DynamicResource InPlaceIOName}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Jog, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Text="{Binding JogIOInputInfo.ShowOnUIName}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Jog, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    Text="{Binding JogDirection, Mode=OneWay}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Jog, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Text="{Binding JogArrivedCondition, Mode=OneWay}"
                                    Visibility="{Binding MovementPointType, Converter={StaticResource MovementTypeToVisible}, ConverterParameter=Jog, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Text="{DynamicResource Speed}" />
                                <TextBox
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Text="{Binding Vel}" />
                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="3"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Right"
                                    Text="{Binding AxisInfo.Type, Converter={StaticResource EnumToVelConverter}, Mode=OneWay}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

            <Grid
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="2,2,0,0"
                Background="{StaticResource AppleHeavyBackGroundBrush}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <CheckBox
                        x:Name="ShowAllAxesCheckBox"
                        Margin="4,2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{DynamicResource ShowsAllAxisOperations}" />
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding CurrentSelectPointName.MovementPointPositionsMonitorCollection}">
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ScrollViewer
                                    CanContentScroll="False"
                                    HorizontalScrollBarVisibility="Auto"
                                    VerticalScrollBarVisibility="Hidden">
                                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid
                                    Width="328"
                                    Margin="5,0,0,0"
                                    Style="{StaticResource GridShowAllAxesStyle}">
                                    <Grid.Resources>
                                        <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                        <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Block.TextAlignment" Value="Center" />
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Grid.Row="0"
                                        Grid.RowSpan="5"
                                        Grid.Column="4"
                                        Margin="5,10,0,3"
                                        BorderBrush="#939393"
                                        BorderThickness="0,0,1,0" />
                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="3"
                                        Margin="0"
                                        Padding="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        FontSize="17"
                                        FontWeight="Bold"
                                        Text="{Binding AxisInfo.ShowOnUIName}" />
                                    <Button
                                        Grid.Row="0"
                                        Grid.Column="3"
                                        Margin="2,0,0,2"
                                        Padding="0"
                                        Command="{Binding DataContext.AxisClearErrorCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding AxisInfo}"
                                        Content="{DynamicResource ClearErrors}" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Padding="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Text="{DynamicResource Dot/inchSpeed}" />
                                    <zc:NumericUpDown
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        BorderThickness="0,0,0,1"
                                        CornerRadius="0"
                                        DecimalPlaces="2"
                                        Increment="1"
                                        Minimum="1"
                                        Style="{StaticResource ZeroNumericUpDown}"
                                        Value="{Binding AxisInfo.JogVel}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding DataContext.UpdateJogVelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding AxisInfo}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </zc:NumericUpDown>
                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="2"
                                        HorizontalAlignment="Left"
                                        Text="{Binding AxisInfo.Type, Converter={StaticResource EnumToVelConverter}, Mode=OneWay}" />
                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="0,0,2,2"
                                        Content="{materialDesign:PackIcon Kind=ChevronTripleLeft,
                                                                          Size=26}"
                                        IsEnabled="{Binding DataContext.ButtonEnable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.JogNegativeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding AxisInfo}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding DataContext.JogMoveStopCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding AxisInfo}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="3"
                                        Margin="2,0,0,2"
                                        Content="{materialDesign:PackIcon Kind=ChevronTripleRight,
                                                                          Size=26}"
                                        IsEnabled="{Binding DataContext.ButtonEnable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.JogPositiveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding AxisInfo}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding DataContext.JogMoveStopCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding AxisInfo}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Margin="0,2,2,0"
                                        Padding="0"
                                        Command="{Binding DataContext.AxisServoOnCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding AxisInfo}"
                                        Content="{DynamicResource UpperEnabl}" />
                                    <Button
                                        Grid.Row="2"
                                        Grid.Column="3"
                                        Margin="2,2,0,0"
                                        Padding="0"
                                        Command="{Binding DataContext.AxisServoOffCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding AxisInfo}"
                                        Content="{DynamicResource DownEnabl}" />
                                    <TextBlock
                                        Grid.Row="3"
                                        Grid.Column="0"
                                        Margin="0"
                                        Padding="0"
                                        HorizontalAlignment="Left"
                                        Text="{DynamicResource StepMoveInfo}" />
                                    <zc:NumericUpDown
                                        Grid.Row="4"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        BorderThickness="0,0,0,1"
                                        CornerRadius="0"
                                        DecimalPlaces="3"
                                        Increment="0.01"
                                        Minimum="0.001"
                                        Style="{StaticResource ZeroNumericUpDown}"
                                        Value="{Binding AxisInfo.RelMoveDistance}" />
                                    <TextBlock
                                        Grid.Row="4"
                                        Grid.Column="1"
                                        Margin="2"
                                        HorizontalAlignment="Left"
                                        Text="{Binding AxisInfo.Type, Converter={StaticResource EnumToPositionConverter}, Mode=OneWay}" />
                                    <Button
                                        Grid.Row="4"
                                        Grid.Column="2"
                                        Margin="0,0,2,0"
                                        Padding="0"
                                        Command="{Binding DataContext.RelMoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding AxisInfo}"
                                        Content="{DynamicResource StepMoveStartButton}" />
                                    <Button
                                        Grid.Row="4"
                                        Grid.Column="3"
                                        Margin="2,0,0,0"
                                        Padding="0"
                                        Command="{Binding DataContext.RelMoveStopCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding AxisInfo}"
                                        Content="{DynamicResource StepMoveStopButton}" />

                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
