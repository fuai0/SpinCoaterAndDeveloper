<UserControl
    x:Class="SpinCoaterAndDeveloper.App.Views.MCAxisConfigView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bp="clr-namespace:PrismAutomationPlatformExt;assembly=PrismAutomationPlatformExt"
    xmlns:cv="clr-namespace:SpinCoaterAndDeveloper.App.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:listboxEx="clr-namespace:PrismAutomationPlatformExt;assembly=PrismAutomationPlatformExt"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:motionControl="clr-namespace:MotionControlActuation;assembly=AbstractMotionControlActuation"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vc="clr-namespace:ValueConverters;assembly=ValueConverters"
    xmlns:viewmodels="clr-namespace:SpinCoaterAndDeveloper.App.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:MCAxisConfigViewModel}"
    d:DesignHeight="600"
    d:DesignWidth="990"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <bp:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
        <ObjectDataProvider
            x:Key="MotionAxisTypeEnum"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="motionControl:AxisType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <cv:ShortToHomeMethodConverter x:Key="ShortToHomeMethodConverter" />
        <cv:AxisTypeToUIConverter x:Key="AxisTypeToUIConverter" />
        <cv:AxisTypeToVMConverter x:Key="AxisTypeToVMConverter" />
        <vc:EnumToObjectConverter x:Key="EnumToPositionConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm</sys:String>
                    <sys:String x:Key="RotateAxis">°(度)</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
        <vc:EnumToObjectConverter x:Key="EnumToAccConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm/s²</sys:String>
                    <sys:String x:Key="RotateAxis">°/s²</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
        <vc:EnumToObjectConverter x:Key="EnumToVelConverter">
            <vc:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <sys:String x:Key="LineAxis">mm/s</sys:String>
                    <sys:String x:Key="RotateAxis">°/s</sys:String>
                </ResourceDictionary>
            </vc:EnumToObjectConverter.Items>
        </vc:EnumToObjectConverter>
        <vc:BoolToStringConverter
            x:Key="BoolToStringConverter"
            FalseValue="Disable"
            TrueValue="Enable" />
    </UserControl.Resources>
    <materialDesign:DialogHost>
        <materialDesign:DrawerHost IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <materialDesign:DrawerHost.RightDrawerContent>
                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                    <DockPanel
                        Width="300"
                        Margin="10,10"
                        VerticalAlignment="Top"
                        LastChildFill="False">
                        <DockPanel.Resources>
                            <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
                                <Setter Property="Margin" Value="5,5,5,0" />
                                <Setter Property="Padding" Value="0" />
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="5,5,5,0" />
                            </Style>
                        </DockPanel.Resources>
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisInputName}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{DynamicResource MustAndUniqueHint}"
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.Name}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisIdOnCard}" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding NewAxis.AxisIdOnCard}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource Number:}" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding NewAxis.Number}" />
                        <!--<TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisInputCNName}" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding NewAxis.CNName}" />-->
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisInputENName}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{DynamicResource Optional}"
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.ENName}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisInputVNName}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{DynamicResource Optional}"
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.VNName}" />
                        <!--<TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisInputXXName}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.XXName}"
                            materialDesign:HintAssist.Hint="{DynamicResource Optional}" />-->
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeMethod}" />
                        <ComboBox
                            Width="290"
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.HomeMethod, Converter={StaticResource ShortToHomeMethodConverter}}">
                            <ComboBoxItem Content="{DynamicResource #1NegativeLimitSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #2PositiveLimitSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #3PositiveOriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #4PositiveOriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #5NegativeOriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #6NegativeOriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #7PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #8PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #9PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #10PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #11NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #12NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #13NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #14NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #17NegativeLimitSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #18PositiveLimitSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #19PositiveOriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #20PositiveOriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #21NegativeOriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #22NegativeOriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #23PositiveLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #24PositiveLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #25PositiveLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #26PositiveLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #27NegativeLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #28NegativeLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #29NegativeLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #30NegativeLimitSwitch+OriginSwitch}" />
                            <ComboBoxItem Content="{DynamicResource #33ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #34ZSignalFromTheEncoder}" />
                            <ComboBoxItem Content="{DynamicResource #35ZSignalFromTheEncoder(ServoDoesNotRequireOPStatus)}" />
                        </ComboBox>
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeHighVel}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.HomeHighVel}"
                            ToolTip="mm/s" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeLowVel}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.HomeLowVel}"
                            ToolTip="mm/s" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeAcc}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.HomeAcc}"
                            ToolTip="mm/s²" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeTimeout}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            Text="{Binding NewAxis.HomeTimeout}"
                            ToolTip="ms" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisProportion}" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding NewAxis.Proportion}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisHomeOffset}" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding NewAxis.HomeOffset}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisAxisType}" />
                        <ComboBox
                            Margin="5,5,5,0"
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding Source={StaticResource MotionAxisTypeEnum}, Converter={StaticResource AxisTypeToUIConverter}}"
                            Text="{Binding NewAxis.Type, Converter={StaticResource AxisTypeToVMConverter}}" />
                        <CheckBox
                            x:Name="ConfigAxisSoftLimitEnable"
                            Margin="3,5,5,0"
                            Content="{DynamicResource ConfigAxisSoftLimitEnable}"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding NewAxis.SoftLimitEnable}" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisSoftPositiveLimitPos}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            IsEnabled="{Binding ElementName=ConfigAxisSoftLimitEnable, Path=IsChecked}"
                            Text="{Binding NewAxis.SoftPositiveLimitPos}"
                            ToolTip="mm" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisSoftNegativeLimitPos}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            IsEnabled="{Binding ElementName=ConfigAxisSoftLimitEnable, Path=IsChecked}"
                            Text="{Binding NewAxis.SoftNegativeLimitPos}"
                            ToolTip="mm" />
                        <TextBlock DockPanel.Dock="Top" Text="{DynamicResource ConfigAxisGroup}" />
                        <ComboBox
                            Margin="5,5,5,0"
                            DockPanel.Dock="Top"
                            IsEditable="True"
                            ItemsSource="{Binding AxisGroupCollection}"
                            Text="{Binding NewAxis.Group}" />
                        <CheckBox
                            x:Name="SafeAxisCheckBox"
                            Margin="5,5,5,0"
                            Content="{DynamicResource ConfigAxisSafe}"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding NewAxis.SafeAxisEnable}" />
                        <TextBlock
                            DockPanel.Dock="Top"
                            IsEnabled="{Binding ElementName=SafeAxisCheckBox, Path=IsChecked}"
                            Text="{DynamicResource ConfigAxisSafePosition}" />
                        <TextBox
                            DockPanel.Dock="Top"
                            IsEnabled="{Binding ElementName=SafeAxisCheckBox, Path=IsChecked}"
                            Text="{Binding NewAxis.SafeAxisPosition}" />
                        <Button
                            Margin="5,5,5,0"
                            Command="{Binding AddAxisCommand}"
                            Content="{DynamicResource Add}"
                            DockPanel.Dock="Top" />
                    </DockPanel>
                </ScrollViewer>
            </materialDesign:DrawerHost.RightDrawerContent>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4*" />
                </Grid.ColumnDefinitions>
                <Grid Margin="0,0,2,0" Background="{StaticResource AppleHeavyBackGroundBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListBox
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding AxisCfgCollection}"
                        SelectedItem="{Binding CurrentSelectAxis}" />
                    <StackPanel Grid.Row="1" Margin="0,8,0,0">
                        <Grid Margin="4,0,4,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="4*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Margin="0,0,2,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                Text="{DynamicResource FilterGroup}" />
                            <ComboBox
                                x:Name="GroupSelect"
                                Grid.Column="1"
                                Margin="2,0,0,0"
                                Padding="0"
                                ItemsSource="{Binding AxisGroupCollection}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding GroupChangedCommand}" CommandParameter="{Binding ElementName=GroupSelect, Path=SelectedValue}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </Grid>
                        <UniformGrid Margin="4,8,4,0" Columns="2">
                            <Button
                                Margin="0,0,2,0"
                                Padding="0"
                                Command="{Binding ShowAllAxesCommand}"
                                Content="{DynamicResource ShowAllAxes}" />
                            <Button
                                Margin="2,0,0,0"
                                Padding="0"
                                Command="{Binding AddAxisCfgCommand}"
                                Content="{DynamicResource AddAxisCfg}" />
                        </UniformGrid>
                        <UniformGrid Margin="4,8,4,0" Columns="2">
                            <Button
                                Margin="0,0,2,0"
                                Padding="0"
                                Command="{Binding DeleteAxisCommand}"
                                Content="{DynamicResource DeleteAxisCfg}"
                                Foreground="{StaticResource SecondaryAccentForegroundBrush}" />
                        </UniformGrid>
                        <UniformGrid Margin="4,8,4,8" Columns="2">
                            <Button
                                Margin="0,0,2,0"
                                Padding="0"
                                Command="{Binding SaveSelectedAxisCommand}"
                                Content="{DynamicResource SaveCheck}" />
                            <Button
                                Margin="2,0,0,0"
                                Padding="0"
                                Command="{Binding SaveAllAxesCommand}"
                                Content="{DynamicResource Save}" />
                        </UniformGrid>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="2,0,0,2"
                        Background="{StaticResource AppleHeavyBackGroundBrush}"
                        CornerRadius="0">
                        <DataGrid
                            materialDesign:DataGridAssist.CellPadding="10 2 10 2"
                            materialDesign:DataGridAssist.ColumnHeaderPadding="10 2 10 2"
                            materialDesign:DataGridAssist.SelectedCellBorderBrush="Transparent"
                            AutoGenerateColumns="False"
                            Background="{StaticResource AppleHeavyBackGroundBrush}"
                            CanUserAddRows="False"
                            CanUserSortColumns="False"
                            HeadersVisibility="All"
                            IsReadOnly="True"
                            ItemsSource="{Binding AxisCfgCollection}"
                            RowHeaderWidth="1"
                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                            SelectedItem="{Binding CurrentSelectAxis}"
                            SelectionMode="Single">
                            <DataGrid.Resources>
                                <Style
                                    x:Key="DataGridColumnElementStyleDefine"
                                    BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                    TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding Number, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource Number}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding AxisIdOnCard, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderIdOnCard}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource Name}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding CNName, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource CNName}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding ENName, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ENName}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding VNName, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource VNName}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn
                                    Binding="{Binding HomeMethod, Converter={StaticResource ShortToHomeMethodConverter}, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeMethod}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding HomeHighVel, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeHighVel}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding HomeLowVel, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeLowVel}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding HomeAcc, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeAcc}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding HomeTimeout, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeTimeout}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding HomeOffset, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderHomeOffset}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Proportion, Mode=OneWay}" ElementStyle="{StaticResource DataGridColumnElementStyleDefine}">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderProportion}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn
                                    Binding="{Binding Type, Converter={StaticResource AxisTypeToVMConverter}, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderAxisType}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding SoftLimitEnable, Mode=OneWay, Converter={StaticResource BoolToStringConverter}}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderSoftLimitEnable}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SoftLimitEnable}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SoftLimitEnable}" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentForegroundBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding SoftPositiveLimitPos, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderSoftPositiveLimitPos}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn
                                    Binding="{Binding SoftNegativeLimitPos, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderSoftNegativeLimitPos}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding Group, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource Group}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding SafeAxisEnable, Mode=OneWay, Converter={StaticResource BoolToStringConverter}}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigHeaderAxisSafe}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SafeAxisEnable}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SafeAxisEnable}" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource SecondaryAccentForegroundBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding SafeAxisPosition, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderSafePosition}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn
                                    Binding="{Binding TargetLocationGap, Mode=OneWay}"
                                    ElementStyle="{StaticResource DataGridColumnElementStyleDefine}"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="Content" Value="{DynamicResource ConfigAxisHeaderTargetLocationGap}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                    <ScrollViewer
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="2,2,2,0"
                        Background="{StaticResource AppleHeavyBackGroundBrush}">
                        <Grid>
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0,0,5,0" />
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                                <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                                    <Setter Property="Margin" Value="5,0,0,0" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Block.TextAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="1"
                                Text="{DynamicResource Number}" />
                            <TextBox
                                Grid.Row="0"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.Number, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderIdOnCard}" />
                            <TextBox
                                Grid.Row="1"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.AxisIdOnCard, UpdateSourceTrigger=PropertyChanged}" />


                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="1"
                                Text="{DynamicResource Name}" />
                            <TextBox
                                Grid.Row="2"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.Name, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="3"
                                Grid.Column="1"
                                Text="{DynamicResource CNName}" />
                            <TextBox
                                Grid.Row="3"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.CNName, UpdateSourceTrigger=PropertyChanged}" />


                            <TextBlock
                                Grid.Row="4"
                                Grid.Column="1"
                                Text="{DynamicResource ENName}" />
                            <TextBox
                                Grid.Row="4"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.ENName, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="5"
                                Grid.Column="1"
                                Text="{DynamicResource VNName}" />
                            <TextBox
                                Grid.Row="5"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.VNName, UpdateSourceTrigger=PropertyChanged}" />


                            <TextBlock
                                Grid.Row="6"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderHomeHighVel}" />
                            <TextBox
                                Grid.Row="6"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.HomeHighVel, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="6"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToVelConverter}}" />
                            <TextBlock
                                Grid.Row="7"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderHomeLowVel}" />
                            <TextBox
                                Grid.Row="7"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.HomeLowVel, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="7"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToVelConverter}}" />

                            <TextBlock
                                Grid.Row="8"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderHomeAcc}" />
                            <TextBox
                                Grid.Row="8"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.HomeAcc, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="8"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToAccConverter}}" />
                            <TextBlock
                                Grid.Row="9"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderHomeTimeout}" />
                            <TextBox
                                Grid.Row="9"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.HomeTimeout, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="9"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="ms" />

                            <TextBlock
                                Grid.Row="10"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderHomeOffset}" />
                            <TextBox
                                Grid.Row="10"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.HomeOffset, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="10"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToPositionConverter}}" />
                            <TextBlock
                                Grid.Row="11"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderProportion}" />
                            <TextBox
                                Grid.Row="11"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.Proportion, UpdateSourceTrigger=PropertyChanged}" />


                            <TextBlock
                                Grid.Row="12"
                                Grid.Column="1"
                                Text="{DynamicResource ConfigAxisHeaderAxisType}" />
                            <ComboBox
                                Grid.Row="12"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                HorizontalContentAlignment="Center"
                                ItemsSource="{Binding Source={StaticResource MotionAxisTypeEnum}, Converter={StaticResource AxisTypeToUIConverter}}"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource AxisTypeToVMConverter}}" />
                            <TextBlock
                                Grid.Row="13"
                                Grid.Column="1"
                                Text="{DynamicResource Group}" />
                            <ComboBox
                                Grid.Row="13"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                HorizontalContentAlignment="Center"
                                IsEditable="True"
                                ItemsSource="{Binding AxisGroupCollection}"
                                Text="{Binding CurrentSelectAxis.Group}" />


                            <CheckBox
                                x:Name="ConfigAxisSoftLimitEnable1"
                                Grid.Row="14"
                                Grid.Column="0"
                                HorizontalAlignment="Center"
                                Content="{DynamicResource ConfigAxisHeaderSoftLimitEnable}"
                                IsChecked="{Binding CurrentSelectAxis.SoftLimitEnable}" />

                            <TextBlock
                                Grid.Row="14"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Text="{DynamicResource ConfigAxisHeaderSoftPositiveLimitPos}" />
                            <TextBox
                                Grid.Row="14"
                                Grid.Column="2"
                                IsEnabled="{Binding ElementName=ConfigAxisSoftLimitEnable1, Path=IsChecked}"
                                Text="{Binding CurrentSelectAxis.SoftPositiveLimitPos, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="14"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToPositionConverter}}" />

                            <TextBlock
                                Grid.Row="15"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Text="{DynamicResource ConfigAxisHeaderSoftNegativeLimitPos}" />
                            <TextBox
                                Grid.Row="15"
                                Grid.Column="2"
                                IsEnabled="{Binding ElementName=ConfigAxisSoftLimitEnable1, Path=IsChecked}"
                                Text="{Binding CurrentSelectAxis.SoftNegativeLimitPos, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="15"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToPositionConverter}}" />

                            <CheckBox
                                x:Name="SafeAxisCheckBox1"
                                Grid.Row="16"
                                Grid.Column="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{DynamicResource ConfigHeaderAxisSafe}"
                                IsChecked="{Binding CurrentSelectAxis.SafeAxisEnable}" />


                            <TextBlock
                                Grid.Row="16"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Text="{DynamicResource ConfigAxisSafePosition}" />
                            <TextBox
                                Grid.Row="16"
                                Grid.Column="2"
                                IsEnabled="{Binding ElementName=SafeAxisCheckBox1, Path=IsChecked}"
                                Text="{Binding CurrentSelectAxis.SafeAxisPosition, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="16"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="{Binding CurrentSelectAxis.Type, Converter={StaticResource EnumToPositionConverter}}" />

                            <TextBlock
                                Grid.Row="17"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Text="{DynamicResource ConfigAxisHeaderHomeMethod}" />
                            <ComboBox
                                Grid.Row="17"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                HorizontalContentAlignment="Center"
                                Text="{Binding CurrentSelectAxis.HomeMethod, Converter={StaticResource ShortToHomeMethodConverter}}">
                                <ComboBoxItem Content="{DynamicResource #1NegativeLimitSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #2PositiveLimitSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #3PositiveOriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #4PositiveOriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #5NegativeOriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #6NegativeOriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #7PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #8PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #9PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #10PositiveLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #11NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #12NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #13NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #14NegativeLimitSwitch+OriginSwitch+ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #17NegativeLimitSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #18PositiveLimitSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #19PositiveOriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #20PositiveOriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #21NegativeOriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #22NegativeOriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #23PositiveLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #24PositiveLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #25PositiveLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #26PositiveLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #27NegativeLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #28NegativeLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #29NegativeLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #30NegativeLimitSwitch+OriginSwitch}" />
                                <ComboBoxItem Content="{DynamicResource #33ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #34ZSignalFromTheEncoder}" />
                                <ComboBoxItem Content="{DynamicResource #35ZSignalFromTheEncoder(ServoDoesNotRequireOPStatus)}" />
                            </ComboBox>

                            <TextBlock
                                Grid.Row="18"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Text="{DynamicResource ConfigAxisHeaderTargetLocationGap}" />
                            <TextBox
                                Grid.Row="18"
                                Grid.Column="2"
                                Text="{Binding CurrentSelectAxis.TargetLocationGap, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Row="18"
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                Text="mm" />
                        </Grid>
                    </ScrollViewer>

                    <Border
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="2,2,0,0"
                        Background="{StaticResource AppleHeavyBackGroundBrush}">
                        <Border
                            Margin="4"
                            BorderBrush="{StaticResource ApplelHeavyTextForegroundBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ListBox ItemsSource="{Binding MessageList}">
                                <ListBox.ContextMenu>
                                    <ContextMenu DataContext="{Binding Data, Source={StaticResource BindingProxy}}">
                                        <MenuItem
                                            Command="{Binding MsgClearCommand}"
                                            Header="{DynamicResource ClearLog}"
                                            Icon="{materialDesign:PackIcon Kind=Close}" />
                                        <MenuItem
                                            Command="{Binding OpenLogDirectoryCommand}"
                                            Header="{DynamicResource OpenLog}"
                                            Icon="{materialDesign:PackIcon Kind=FolderSearchOutline}" />
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <i:Interaction.Behaviors>
                                    <listboxEx:ListBoxScrollToBottomExtensions />
                                </i:Interaction.Behaviors>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <TextBlock Text="{Binding Time, StringFormat={}{0:HH:mm:ss:}}" />
                                            <TextBlock
                                                Margin="5,0,0,0"
                                                Text="{Binding Text}"
                                                TextWrapping="Wrap" />
                                        </DockPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=Degree}" Value="INFO">
                                                <Setter Property="ListBoxItem.Foreground" Value="Black" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Degree}" Value="DEBUG">
                                                <Setter Property="ListBoxItem.Foreground" Value="Black" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Degree}" Value="WARN">
                                                <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageOrangeBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Degree}" Value="ERROR">
                                                <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageRedBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Degree}" Value="FATAL">
                                                <Setter Property="ListBoxItem.Foreground" Value="{StaticResource MessageRedBrush}" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                    </Border>
                </Grid>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</UserControl>
